loki:
  enabled: true
  config:
    auth_enabled: false
    target: all
    chunk_store_config:
      max_look_back_period: 0s
    compactor:
      shared_store: filesystem
      working_directory: /data/loki/boltdb-shipper-compactor
    ingester:
      chunk_target_size: 524288
      chunk_block_size: 262144
      chunk_idle_period: 1m
      chunk_retain_period: 30s
      max_chunk_age: 10m
      lifecycler:
        ring:
          replication_factor: 1
      max_transfer_retries: 0
      wal:
        dir: /data/loki/wal
    limits_config:
      retention_period: 2400h
      enforce_metric_name: false
      max_entries_limit_per_query: 100000
      reject_old_samples: false
      reject_old_samples_max_age: 168h
      max_query_length: 0h
    memberlist:
      join_members:
      - loki-stack-memberlist
    schema_config:
      configs:
      - from: "2020-10-24"
        index:
          period: 24h
          prefix: index_
        object_store: filesystem
        schema: v11
        store: boltdb-shipper
    server:
      grpc_listen_port: 9095
      http_listen_port: 3100
    query_range:
      split_queries_by_interval: 0
      parallelise_shardable_queries: false
    querier:
      max_concurrent: 2048
    frontend:
      max_outstanding_per_tenant: 4096
      compress_responses: true
    storage_config:
      boltdb_shipper:
        active_index_directory: /data/loki/boltdb-shipper-active
        cache_location: /data/loki/boltdb-shipper-cache
        cache_ttl: 24h
        shared_store: filesystem
      filesystem:
        directory: /data/loki/chunks
    table_manager:
      retention_deletes_enabled: true
      retention_period: 720h  
  image:
    tag: 2.9.13
  service:
    type: NodePort

promtail:
  enabled: true
  extraArgs:
    - -config.expand-env=true
  config:
    clients:
      - url: http://{{ .Release.Name }}:3100/loki/api/v1/push
        drop_rate_limited_batches: true  # 429 에러(TooManyRequests) 발생 시 해당 배치를 더 이상 재시도하지 않고 바로 drop함.
        batchsize: 1048576    # 1MB (default)
        timeout: 3s
    snippets:
      pipelineStages:
        - cri: {}
        - regex:
            expression: '\[LOG_FOR_APP\]:(?P<json>\{.*\})'
        - json:
            expressions:
              uuid: uuid
            source: json
        - labels:
            uuid: 
      extraServerConfigs: |-
        grpc_server_max_recv_msg_size: 4194304       # 기본값
        grpc_server_max_concurrent_streams: 100      # 기본값 
      extraLimitsConfig: |-
        readline_rate_enabled: true        # (이 인스턴스 단위로 ratelimit 사용 여부)
        readline_rate: 5000                # 초당 최대 전송 라인 (전체 인스턴스 기준)
        readline_burst: 10000              # 순간 최대 라인
        readline_rate_drop: true           # true면 초과시 드랍, false면 대기/재시도
        max_streams: 10000                 # 동시에 관리하는 stream(라벨 조합) 최대 10,000개
        max_line_size: 131072              # 128KB허용, 최대 라인 크기(바이트, 0=무제한)
        max_line_size_truncate: true       # 길이 초과시 잘라서 보낼지 여부
fluent-bit:
  enabled: false

grafana:
  enabled: true
  sidecar:
    datasources:
      label: grafana_datasource
      labelValue: "true"
      enabled: false
      maxLines: 1000
  image:
    tag: 10.3.3
  service:
    type: NodePort

prometheus:
  enabled: true
  isDefault: true
  url: http://{{ include "prometheus.fullname" .}}:{{ .Values.prometheus.server.service.servicePort }}{{ .Values.prometheus.server.prefixURL }}
# url: http://prometheus-server.monitoring.svc.cluster.local
  datasource:
    jsonData: "{}"
  server:
    service:
      type: NodePort
    extraArgs:
      enable-feature: remote-write-receiver
    extraScrapeConfigs: |
      - job_name: 'keda-operator-metrics-apiserver'
        scrape_interval: 10s
        static_configs:
          - targets:
              - keda-operator-metrics-apiserver.keda.svc.cluster.local:8080
      - job_name: 'kube-state-metrics'
        static_configs:
          - targets: ['loki-kube-state-metrics.logging.svc.cluster.local:8080']

filebeat:
  enabled: false

logstash:
  enabled: false