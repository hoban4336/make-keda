apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: spring-io-scaler
  namespace: spring-io
spec:
  scaleTargetRef:
    name: spring-io
  minReplicaCount: 1
  maxReplicaCount: 10
  triggers:

    # Prometheus + Micrometer (Spring Boot)
    - type: prometheus
      metadata:
        metricName: http_pending_requests 
        serverAddress: http://loki-prometheus-server.logging.svc.cluster.local
        metricName: spring_http_requests_per_second
        query: |
          sum(
            rate(http_server_requests_seconds_count{
              application="spring-io", 
              uri!="/actuator/health"
            }[1m])
          )
        threshold: "10"  # 초당 10 요청이면 스케일링

    # CPU scaler (백업용)
    - type: cpu
      metadata:
        metricName: spring_io_cpu_utilization 
        type: Utilization
        value: "60"

    # 홀수 시간(1시, 3시, 5시...)은 5개
    - type: cron
      metadata:
        name: scale-up-cron
        timezone: Asia/Seoul
        start: "0 1-23/2 * * *"     # 홀수 시간 시작
        end:   "0 2-24/2 * * *"     # 다음 시간까지
        desiredReplicas: "5"

    # 짝수 시간(2시, 4시, 6시...)은 1개
    - type: cron
      metadata:
        name: scale-down-cron
        timezone: Asia/Seoul
        start: "0 0-22/2 * * *"     # 짝수 시간 시작
        end:   "0 1-23/2 * * *"     # 다음 시간까지
        desiredReplicas: "1"