mode: daemonset
image:
  repository: otel/opentelemetry-collector-contrib
  # repository: otel/opentelemetry-collector-k8s
  tag: latest

ports:
  metrics:
    enabled: true

presets:
  hostMetrics:
    enabled: true
  kubernetesAttributes:
    enabled: false

config:
  receivers:
    otlp:
      protocols:
        grpc: {}
        http: {}
    prometheus:
      config:
        scrape_configs:
          - job_name: "spring-a"
            scrape_interval: 10s
            metrics_path: "/actuator/prometheus"
            static_configs:
              - targets:
                  - "spring-a-service.spring-a.svc.cluster.local:80"
                labels:
                  deployment_environment_name: dev                      
          - job_name: "spring-b"
            scrape_interval: 10s
            metrics_path: "/actuator/prometheus"
            static_configs:
              - targets:
                  - "spring-b-service.spring-b.svc.cluster.local:80"  # Spring Boot Pod의 서비스 이름과 포트
                labels:
                  deployment_environment_name: dev                   
  exporters:
    debug:
      verbosity: detailed
    prometheusremotewrite:
      endpoint: http://prometheus-server.monitoring.svc.cluster.local:80/api/v1/write
#     endpoint: http://mimir-gateway.monitoring.svc.cluster.local/api/v1/otlp      
      resource_to_telemetry_conversion:
        enabled: true      
      tls:
        insecure: true
    loki:
      endpoint: http://loki.logging.svc.cluster.local:3100/loki/api/v1/push  # Promtail 또는 직접 로그 export
      tls:
        insecure: true    
    otlphttp:
      endpoint: http://tempo.observability.svc.cluster.local:4318
      tls:
        insecure: true
  service:
    pipelines:
      logs:
        receivers: [otlp]
        processors: [batch]
        exporters: [loki]
      traces:
        receivers: [otlp]
        processors: [k8sattributes, batch]
        exporters: [otlphttp]
      metrics:
        receivers: [prometheus]
        processors: [resource, batch]
        exporters: [prometheusremotewrite, debug]
  processors:
    k8sattributes:
      extract:
        metadata:
          - k8s.pod.name
          - k8s.pod.uid
          - k8s.deployment.name
          - k8s.statefulset.name
          - k8s.daemonset.name
          - k8s.namespace.name
          - k8s.node.name
          - k8s.pod.start_time
          - k8s.cluster.uid
      pod_association:
        - sources:
          - from: resource_attribute
            name: k8s.pod.name
          - from: resource_attribute
            name: k8s.namespace.name
    attributes:
      actions:
        - action: insert
          key: loki.attribute.labels
          value: exporter, stream, detected, level, logger, service_node_name
    resource:
      attributes:
      - action: insert
        key: loki.format
        value: raw
      - action: insert
        key: service_node_name
        from_attribute: service.node.name
      - action: insert
        key: deployment_environment_name
        value: dev
      - action: insert
        key: loki.resource.labels
        value: service_node_name, exporter, stream, detected, level, logger
    batch:
      send_batch_size: 10000
    memory_limiter:
      check_interval: 5s
      limit_percentage: 80
      spike_limit_percentage: 25