mode: deployment
image:
# repository: otel/opentelemetry-collector-contrib
  repository: otel/opentelemetry-collector-k8s
  tag: latest

ports:
  metrics:
    enabled: true

presets:
  hostMetrics:
    enabled: true
  kubernetesAttributes:
    enabled: false

config:
  receivers:
    otlp:
      protocols:
        grpc: {}
        http: {}
    prometheus:
      config:
        scrape_configs:
          - job_name: "spring-a"
            scrape_interval: 10s
            metrics_path: "/actuator/prometheus"
            static_configs:
              - targets:
                  - "spring-a-service.spring-a.svc.cluster.local:80"  # Spring Boot Pod의 서비스 이름과 포트          
          - job_name: "spring-b"
            scrape_interval: 10s
            metrics_path: "/actuator/prometheus"
            static_configs:
              - targets:
                  - "spring-b-service.spring-b.svc.cluster.local:80"  # Spring Boot Pod의 서비스 이름과 포트       
  exporters:
    debug:
      verbosity: detailed
    prometheusremotewrite:
      endpoint: http://prometheus-server.monitoring.svc.cluster.local:80/api/v1/write
      tls:
        insecure: true
    loki:
      endpoint: http://loki.logging.svc.cluster.local:3100/loki/api/v1/push  # Promtail 또는 직접 로그 export
      tls:
        insecure: true    
    otlphttp/tempo:
      endpoint: http://tempo.observability.svc.cluster.local:4318
      tls:
        insecure: true
  service:
    pipelines:
      logs:
        receivers: [otlp]
        processors: [batch]
        exporters: [loki]
      traces:
        receivers: [otlp]
        processors: [batch]
        exporters: [otlphttp/tempo]
      metrics:
        receivers: [otlp]
        processors: [resource, batch]
        exporters: [prometheusremotewrite, debug]
  processors:
    resource:
      attributes:
        - action: insert
          key: service_name
          from_attribute: service.name
        - action: insert
          key: service_namespace
          from_attribute: service.namespace
        - action: insert
          key: service_version
          from_attribute: service.version
        - action: insert
          key: deployment_environment
          from_attribute: deployment.environment
        - action: insert
          key: loki.resource.labels
          value: service_name,service_namespace,service_version,deployment_environment
    batch:
      send_batch_size: 10000
    memory_limiter:
      check_interval: 5s
      limit_percentage: 80
      spike_limit_percentage: 25