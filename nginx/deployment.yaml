---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-index
  namespace: nginx
  labels:
    app.kubernetes.io/name: nginx
    app.kubernetes.io/managed-by: keda
    keda-enabled: "true"    
data:
  index.html: |
    <!DOCTYPE html>
    <html>
    <head>
        <title>Welcome to nginx!</title>
    </head>
    <body>
        <h1>Hello</h1>
    </body>
    </html>
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf-template
  namespace: nginx
  labels:
    app.kubernetes.io/name: nginx
    app.kubernetes.io/managed-by: keda
    keda-enabled: "true"    
data:
  nginx.conf.template: |
    user  nginx;
    worker_processes  auto;

    error_log  /var/log/nginx/error.log notice;
    pid        /var/run/nginx.pid;

    events {
        worker_connections  1024;
    }

    http {

        log_format main '$remote_addr - $remote_user [$time_local] '
                        '"$request" $status $body_bytes_sent '
                        '"$http_referer" "$http_user_agent" '
                        'realip:$http_x_forwarded_for';        

        access_log  /var/log/nginx/access.log  main;

        sendfile        on;
        keepalive_timeout  65;

        # Upgrade WebSocket if requested, otherwise use keepalive
        map $http_upgrade $connection_upgrade_keepalive {
            default upgrade;
            ''      '';
        }

        server {
            listen 80;
            server_name y-nginx.aidtclass.com;

            # ALB에서 오는 트래픽의 IP 대역 (예: NCP ALB 내부 서브넷)
            # 실제 client IP는 ALB가 넣어주는 X-Forwarded-For에 있음
            set_real_ip_from 198.18.0.0/16;
            real_ip_header X-Forwarded-For;     

            proxy_buffers 8 16k;
            proxy_buffer_size 32k;

            location /my-ip {
                default_type text/html;
                return 200 "<html><body><h1>Your IP: $remote_addr</h1><h1>Your IP: $http_x_forwarded_for</h1></body></html>";
            }

            error_page   500 502 503 504  /50x.html;
            location = /50x.html {
                root   /usr/share/nginx/html;
            }

        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  namespace: nginx
  labels:
    app.kubernetes.io/name: nginx
    app.kubernetes.io/managed-by: keda
    keda-enabled: "true"     
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
        app.kubernetes.io/name: nginx
        app.kubernetes.io/managed-by: keda        
    spec:
      containers:
        - name: nginx-exporter
          image: nginx/nginx-prometheus-exporter:latest
          args:
            - -nginx.scrape-uri=http://localhost/nginx_status
          ports:
            - containerPort: 9113 
        - name: nginx
          image: nginx:latest
          command: ["/bin/sh", "-c"]
          args: ["/entrypoint.sh"]
          volumeMounts:
            - name: html-volume
              mountPath: /usr/share/nginx/html/index.html
              subPath: index.html
            - name: nginx-conf-template
              mountPath: /etc/nginx/nginx.conf.template
              subPath: nginx.conf.template
          resources:
            requests:
              cpu: 100m
            limits:
              cpu: 200m
          ports:
            - containerPort: 80
      volumes:
        - name: html-volume
          configMap:
            name: nginx-index
        - name: nginx-conf-template
          configMap:
            name: nginx-conf-template       
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
  namespace: nginx
  labels:
    app.kubernetes.io/name: nginx
    app.kubernetes.io/managed-by: keda
    keda-enabled: "true"    
spec:
  selector:
    app: nginx
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-metrics
  namespace: nginx
  labels:
    app.kubernetes.io/name: nginx
    app.kubernetes.io/managed-by: keda
    keda-enabled: "true"    
spec:
  selector:
    app: nginx
  ports:
    - name: metrics
      port: 9113
      targetPort: 9113
  type: ClusterIP