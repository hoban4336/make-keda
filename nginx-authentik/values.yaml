authentik:
authentik:
  server:
    autoscaling:
      enabled: true
      minReplicas: 1
      maxReplicas: 5
      targetCPUUtilizationPercentage: 50

    env:
      - name: AUTHENTIK_POSTGRESQL__PASSWORD
        valueFrom:
          secretKeyRef:
            name: authentik-postgresql
            key: password

    envFrom:
      - secretRef:
          name: authentik-secret-key

    service:
      type: NodePort

    metrics:
      enabled: true

  worker:
    name: worker
    replicas: 1
    autoscaling:
      enabled: true
      minReplicas: 1
      maxReplicas: 5
      targetCPUUtilizationPercentage: 50
      targetMemoryUtilizationPercentage: ~
      behavior: {}

    env:
      - name: AUTHENTIK_POSTGRESQL__PASSWORD
        valueFrom:
          secretKeyRef:
            name: authentik-postgresql
            key: password

    envFrom:
      - secretRef:
          name: authentik-secret-key

  geoip:
    enabled: false

  postgresql:
    enabled: true

  redis:
    enabled: true


  config:
    entries:
      - key: server-snippet
        value: |
          location / {
            auth_request /auth;
            proxy_pass http://spring-io-service.spring-io.svc.cluster.local:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Original-URI $request_uri;
          }
          location = /auth {
            internal;
            proxy_pass http://authentik-server.auth-proxy.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx;
            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;
            proxy_set_header X-Original-URI $request_uri;
          }
