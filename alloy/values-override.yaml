service:
  type: NodePort
alloy:
  configMap:
    create: true
    content: |
      // spring-io 로그 중 [LOG_FOR_APP]만 loki.logging 으로
      loki.source.podlogs "spring_io_log" {
        selector {
          match_labels = {
            app = "spring-io"
          }
        }
        pipeline_stage {
          drop {
            expression = "^(?!.*\\[LOG_FOR_APP\\]).*$"
          }
        }
        forward_to = [loki.write.spring_io_log.receiver]
      }

      loki.write "spring_io_log" {
        endpoint {
          url = "http://loki.logging:3100/loki/api/v1/push"
        }
      }

      // 나머지 spring-io 로그를 loki-distributed-gateway 로
      loki.source.podlogs "spring_io_other" {
        selector {
          match_labels = {
            app = "spring-io"
          }
        }
        pipeline_stage {
          drop {
            expression = ".*\\[LOG_FOR_APP\\].*"
          }
        }
        forward_to = [loki.write.spring_io_other.receiver]
      }

      loki.write "spring_io_other" {
        endpoint {
          url = "http://loki-distributed-gateway.logging:3100/loki/api/v1/push"
        }
      }       
  mounts:
    varlog: true      